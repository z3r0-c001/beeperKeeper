# Telegraf Configuration for Beeper Keeper
# Collects MQTT sensor data and sends to InfluxDB

[agent]
  interval = "10s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "10s"
  flush_jitter = "0s"
  precision = "0s"
  hostname = "beeper_telegraf"
  omit_hostname = false

# InfluxDB v2 Output
[[outputs.influxdb_v2]]
  urls = ["http://influxdb:8086"]
  token = "eCxn7YDEeZ8Xfwic_y6o4ulvLNlIXehSyaDtp7mp93jrRpGIh7bA1uFZH_VzP5OFHEdEW8zi5EyLZqT4xYMumg=="
  organization = "beeperkeeper"
  bucket = "sensors"

# MQTT Consumer - BME680 Sensor Data (including air quality metrics)
[[inputs.mqtt_consumer]]
  servers = ["tcp://mosquitto:1883"]
  topics = [
    "beeper/sensors/bme680/+",
    "beeper/sensors/cpu/+",
    "beeper/system/+",
    "beeper/sensors/camera/+",
    "beeper/camera/+/+",
    "beeper/audio/level",
    "beeper/audio/frequency/+",
    "beeper/audio/stats/+",
    "beeper/audio/events/+",
    "beeper/lights/state",
    "beeper/lights/warning",
    "beeper/water/+",
  ]
  data_format = "json"
  # Removed json_time_key - use server time for all messages (consistent timestamps)
  tag_keys = ["sensor_type", "location"]
  json_string_fields = ["activity_state", "status"]  # Store string fields
  # Note: Now includes IAQ, CO2 equivalent, and compensated gas resistance topics

# MQTT Consumer - Camera Metadata
[[inputs.mqtt_consumer]]
  servers = ["tcp://mosquitto:1883"]
  topics = [
    "beeper/camera/csi/metadata",
    "beeper/camera/usb/metadata"
  ]
  data_format = "json"
  # Removed json_time_key - use server time for all messages (consistent timestamps)
  tag_keys = ["camera"]

# 
# # Webhook Input - Grafana Alert Notifications
# [[inputs.http_listener_v2]]
#   service_address = ":1619"
#   paths = ["/telegraf"]
#   methods = ["POST"]
#   data_format = "json_v2"
#   name_override = "grafana_alerts"
# 
#   [[inputs.http_listener_v2.json_v2]]
#     measurement_name = "grafana_alerts"
#     timestamp_path = "startsAt"
#     timestamp_format = "2006-01-02T15:04:05Z07:00"
# 
#     [[inputs.http_listener_v2.json_v2.tag]]
#       path = "labels.alertname"
#       rename = "alert_name"
# 
#     [[inputs.http_listener_v2.json_v2.tag]]
#       path = "status"
#     [[inputs.http_listener_v2.json_v2.field]]
#       path = "value"
#     source = "grafana"
